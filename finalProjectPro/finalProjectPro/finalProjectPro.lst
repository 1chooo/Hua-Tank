Microsoft (R) Macro Assembler Version 14.33.31630.0	    12/18/22 03:44:36
main.asm						     Page 1 - 1


				include Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				printStartScene PROTO
				decStrLevel PROTO, levelNumDec:WORD
				decStrScore PROTO, scoreNumDec:WORD
				decStrLives PROTO, livesNumDec:WORD
				decStrBogys PROTO, bogysNumDec:WORD

				printLevel PROTO, xyPosInit:COORD
				printScore PROTO, xyPosInit:COORD
				printLives PROTO, xyPosInit:COORD
				printBogys PROTO, xyPosInit:COORD

				bogyWalking PROTO, xyPosInBogy:COORD
				bogyClear   PROTO, xyPosInBogy:COORD
				printGreenLine PROTO, xyPosInLine:COORD

				tankWalking PROTO, xyPosInit:COORD
				tankClear   PROTO, xyPosInit:COORD

				; 	玩遊戲   eax = 1
				; 	暫停		eax = 2
				; 	結束畫面	eax = 3
				; 	離開程式	eax = 4

 00000000			.data
					; 視窗的變數們
 00000000 48 75 61 20 54		windowTitleStr BYTE "Hua Tank V.S Bogy",0 ; 標題
	   61 6E 6B 20 56
	   2E 53 20 42 6F
	   67 79 00
 00000012 0000 0000 007D		windowBound    SMALL_RECT <0,0,125,25>    ; 視窗大小
	   0019
 0000001A 00000000			consoleHandle  DWORD ?

 0000001E 0006 0005			xyPos COORD   <6,5>
 00000022 0007 000F			xyPosTank COORD   <7,15>
 00000026 0078 0005			xyPosBogy0 COORD   <120,5>
 0000002A 006E 0009			xyPosBogy1 COORD   <110,9>
 0000002E 0091 000D			xyPosBogy2 COORD   <145,13>
 00000032 0082 0011			xyPosBogy3 COORD   <130,17>
 00000036 0071 0015			xyPosBogy4 COORD   <113,21>
 0000003A 007A 0019			xyPosBogy5 COORD   <122,25>
 0000003E 00000000			cells_Written DWORD ?

					; 開始畫面的字
 00000042 20 5F 5F 5F 5F		startStr BYTE " _________    _      ____  _____ ___  ____   ____   ____  ______      ______     ___      ______ ____  ____ "
	   5F 5F 5F 5F 5F
	   20 20 20 20 5F
	   20 20 20 20 20
	   20 5F 5F 5F 5F
	   20 20 5F 5F 5F
	   5F 5F 20 5F 5F
	   5F 20 20 5F 5F
	   5F 5F 20 20 20
	   5F 5F 5F 5F 20
	   20 20 5F 5F 5F
	   5F 20 20 5F 5F
	   5F 5F 5F 5F 20
	   20 20 20 20 20
	   5F 5F 5F 5F 5F
	   5F 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   5F 5F 5F 5F 5F
	   5F 20 5F 5F 5F
	   5F 20 20 5F 5F
	   5F 5F 20
 000000AE  7C 20 20 5F 20				 BYTE "|  _   _  |  / \    |_   \|_   _|_  ||_  _| |_  _| |_  _.' ____ \    |_   _ \  .'   `.  .' ___  |_  _||_  _|"
	   20 20 5F 20 20
	   7C 20 20 2F 20
	   5C 20 20 20 20
	   7C 5F 20 20 20
	   5C 7C 5F 20 20
	   20 5F 7C 5F 20
	   20 7C 7C 5F 20
	   20 5F 7C 20 7C
	   5F 20 20 5F 7C
	   20 7C 5F 20 20
	   5F 2E 27 20 5F
	   5F 5F 5F 20 5C
	   20 20 20 20 7C
	   5F 20 20 20 5F
	   20 5C 20 20 2E
	   27 20 20 20 60
	   2E 20 20 2E 27
	   20 5F 5F 5F 20
	   20 7C 5F 20 20
	   5F 7C 7C 5F 20
	   20 5F 7C
 0000011A  7C 5F 2F 20 7C				 BYTE "|_/ | | \_| / _ \     |   \ | |   | |_/ /     \ \   / / | (___ \_|     | |_) |/  .-.  \/ .'   \_| \ \  / /  " 
	   20 7C 20 5C 5F
	   7C 20 2F 20 5F
	   20 5C 20 20 20
	   20 20 7C 20 20
	   20 5C 20 7C 20
	   7C 20 20 20 7C
	   20 7C 5F 2F 20
	   2F 20 20 20 20
	   20 5C 20 5C 20
	   20 20 2F 20 2F
	   20 7C 20 28 5F
	   5F 5F 20 5C 5F
	   7C 20 20 20 20
	   20 7C 20 7C 5F
	   29 20 7C 2F 20
	   20 2E 2D 2E 20
	   20 5C 2F 20 2E
	   27 20 20 20 5C
	   5F 7C 20 5C 20
	   5C 20 20 2F 20
	   2F 20 20
 00000186  20 20 20 20 7C				 BYTE "    | |    / ___ \    | |\ \| |   |  __'.      \ \ / /   _.____`.      |  __'.| |   | || |   ____  \ \/ /   " 
	   20 7C 20 20 20
	   20 2F 20 5F 5F
	   5F 20 5C 20 20
	   20 20 7C 20 7C
	   5C 20 5C 7C 20
	   7C 20 20 20 7C
	   20 20 5F 5F 27
	   2E 20 20 20 20
	   20 20 5C 20 5C
	   20 2F 20 2F 20
	   20 20 5F 2E 5F
	   5F 5F 5F 60 2E
	   20 20 20 20 20
	   20 7C 20 20 5F
	   5F 27 2E 7C 20
	   7C 20 20 20 7C
	   20 7C 7C 20 7C
	   20 20 20 5F 5F
	   5F 5F 20 20 5C
	   20 5C 2F 20 2F
	   20 20 20
 000001F2  20 20 20 5F 7C				 BYTE "   _| |_ _/ /   \ \_ _| |_\   |_ _| |  \ \_     \ ' /_  | \____) | _  _| |__) \  `-'  /\ `.___]  | _|  |_   " 
	   20 7C 5F 20 5F
	   2F 20 2F 20 20
	   20 5C 20 5C 5F
	   20 5F 7C 20 7C
	   5F 5C 20 20 20
	   7C 5F 20 5F 7C
	   20 7C 20 20 5C
	   20 5C 5F 20 20
	   20 20 20 5C 20
	   27 20 2F 5F 20
	   20 7C 20 5C 5F
	   5F 5F 5F 29 20
	   7C 20 5F 20 20
	   5F 7C 20 7C 5F
	   5F 29 20 5C 20
	   20 60 2D 27 20
	   20 2F 5C 20 60
	   2E 5F 5F 5F 5D
	   20 20 7C 20 5F
	   7C 20 20 7C 5F
	   20 20 20
 0000025E  20 20 7C 5F 5F				 BYTE "  |_____|____| |____|_____|\____|____||____|     \_/(_)  \______.'(_)|_______/ `.___.'  `._____.' |______|  "
	   5F 5F 5F 7C 5F
	   5F 5F 5F 7C 20
	   7C 5F 5F 5F 5F
	   7C 5F 5F 5F 5F
	   5F 7C 5C 5F 5F
	   5F 5F 7C 5F 5F
	   5F 5F 7C 7C 5F
	   5F 5F 5F 7C 20
	   20 20 20 20 5C
	   5F 2F 28 5F 29
	   20 20 5C 5F 5F
	   5F 5F 5F 5F 2E
	   27 28 5F 29 7C
	   5F 5F 5F 5F 5F
	   5F 5F 2F 20 60
	   2E 5F 5F 5F 2E
	   27 20 20 60 2E
	   5F 5F 5F 5F 5F
	   2E 27 20 7C 5F
	   5F 5F 5F 5F 5F
	   7C 20 20

					;印開始畫面的提示字
 000002CA 50 72 65 73 73		enterMsg BYTE "Press ‘E’ to enter"
	   20 A1 A5 45 A1
	   A6 20 74 6F 20
	   65 6E 74 65 72
 000002DE 50 72 65 73 73		leaveMsg BYTE "Press ‘L’ to leave"
	   20 A1 A5 4C A1
	   A6 20 74 6F 20
	   6C 65 61 76 65

					;印坦克
 000002F2 20 20 20 20 20		startTank BYTE "       \                "
	   20 20 5C 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20
 0000030A  20 20 20 20 20				  BYTE "       _\______         "
	   20 20 5F 5C 5F
	   5F 5F 5F 5F 5F
	   20 20 20 20 20
	   20 20 20 20
 00000322  20 20 20 20 20				  BYTE "      /        \=======D"
	   20 2F 20 20 20
	   20 20 20 20 20
	   5C 3D 3D 3D 3D
	   3D 3D 3D 44
 0000033A  20 5F 5F 5F 5F				  BYTE " ____|_HUA_TANK_\_____  "
	   7C 5F 48 55 41
	   5F 54 41 4E 4B
	   5F 5C 5F 5F 5F
	   5F 5F 20 20
 00000352  2F 20 5F 5F 5F				  BYTE "/ ___WHERE_ARE_YOU?__ \ "
	   57 48 45 52 45
	   5F 41 52 45 5F
	   59 4F 55 3F 5F
	   5F 20 5C 20
 0000036A  5C 2F 20 5F 3D				  BYTE "\/ _===============_ \/ "
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 5F
	   20 5C 2F 20
 00000382  20 20 5C 2D 3D				  BYTE "  \-===============-/   "
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 2D
	   2F 20 20 20
					;印Bogy
 0000039A 20 28 5C 5F 2F		startBogy BYTE " (\_/) "
	   29 20
 000003A1  20 7C 4F 76 4F				  BYTE " |OvO| "
	   7C 20
 000003A8  2F 20 48 55 41				  BYTE "/ HUA \"
	   20 5C
 000003AF  5C 7C 20 58 20				  BYTE "\| X |/"
	   7C 2F
 000003B6  20 7C 5F 7C 5F				  BYTE " |_|_| "
	   7C 20

 000003BD 2A 2A 2A 2A 2A		gameIntro BYTE "*****************************************************************"
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
 000003FE  2A 20 20 20 20	              BYTE "*                      Game Introduction:                       *"
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 47 61
	   6D 65 20 49 6E
	   74 72 6F 64 75
	   63 74 69 6F 6E
	   3A 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2A
 0000043F  2A 20 20 20 20	              BYTE "*            Control the Hua Tank to kill the Bogy.             *"
	   20 20 20 20 20
	   20 20 20 43 6F
	   6E 74 72 6F 6C
	   20 74 68 65 20
	   48 75 61 20 54
	   61 6E 6B 20 74
	   6F 20 6B 69 6C
	   6C 20 74 68 65
	   20 42 6F 67 79
	   2E 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2A
 00000480  2A 20 20 20 20	              BYTE "*             Don't let Bogy cross the green line,              *"
	   20 20 20 20 20
	   20 20 20 20 44
	   6F 6E 27 74 20
	   6C 65 74 20 42
	   6F 67 79 20 63
	   72 6F 73 73 20
	   74 68 65 20 67
	   72 65 65 6E 20
	   6C 69 6E 65 2C
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2A
 000004C1  2A 20 20 20 20				  BYTE "*                or your life will shock down!!                 *"
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 6F 72 20
	   79 6F 75 72 20
	   6C 69 66 65 20
	   77 69 6C 6C 20
	   73 68 6F 63 6B
	   20 64 6F 77 6E
	   21 21 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2A
 00000502  2A 20 20 20 53	              BYTE "*   Start with 3 lives, once the live reaches zero, you lose!!  *"
	   74 61 72 74 20
	   77 69 74 68 20
	   33 20 6C 69 76
	   65 73 2C 20 6F
	   6E 63 65 20 74
	   68 65 20 6C 69
	   76 65 20 72 65
	   61 63 68 65 73
	   20 7A 65 72 6F
	   2C 20 79 6F 75
	   20 6C 6F 73 65
	   21 21 20 20 2A
 00000543  2A 20 20 20 20	              BYTE "*     Kill the last monsters, if you still alive, you win!!     *"
	   20 4B 69 6C 6C
	   20 74 68 65 20
	   6C 61 73 74 20
	   6D 6F 6E 73 74
	   65 72 73 2C 20
	   69 66 20 79 6F
	   75 20 73 74 69
	   6C 6C 20 61 6C
	   69 76 65 2C 20
	   79 6F 75 20 77
	   69 6E 21 21 20
	   20 20 20 20 2A
 00000584  2A 20 20 20 20	              BYTE "*                                                               *"
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2A
 000005C5  2A 20 20 20 20	              BYTE "*                   How to control the tank:                    *"
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   48 6F 77 20 74
	   6F 20 63 6F 6E
	   74 72 6F 6C 20
	   74 68 65 20 74
	   61 6E 6B 3A 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2A
 00000606  2A 20 20 20 20	              BYTE "*               + press 'up'    to move up                      *"
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2B 20 70 72
	   65 73 73 20 27
	   75 70 27 20 20
	   20 20 74 6F 20
	   6D 6F 76 65 20
	   75 70 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2A
 00000647  2A 20 20 20 20	              BYTE "*               + press 'down'  to move down                    *"
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2B 20 70 72
	   65 73 73 20 27
	   64 6F 77 6E 27
	   20 20 74 6F 20
	   6D 6F 76 65 20
	   64 6F 77 6E 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2A
 00000688  2A 20 20 20 20	              BYTE "*               + press 'right' to fire bullet                  *"
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2B 20 70 72
	   65 73 73 20 27
	   72 69 67 68 74
	   27 20 74 6F 20
	   66 69 72 65 20
	   62 75 6C 6C 65
	   74 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2A
 000006C9  2A 20 20 20 20	              BYTE "*                                                               *"
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2A
 0000070A  2A 20 20 20 20	              BYTE "*                         How to play:                          *"
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 48 6F 77 20
	   74 6F 20 70 6C
	   61 79 3A 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2A
 0000074B  2A 20 20 20 20	              BYTE "*               + press 'space' to start game                   *"
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2B 20 70 72
	   65 73 73 20 27
	   73 70 61 63 65
	   27 20 74 6F 20
	   73 74 61 72 74
	   20 67 61 6D 65
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2A
 0000078C  2A 20 20 20 20	              BYTE "*               + press 'P'     to pause game                   *"
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2B 20 70 72
	   65 73 73 20 27
	   50 27 20 20 20
	   20 20 74 6F 20
	   70 61 75 73 65
	   20 67 61 6D 65
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2A
 000007CD  2A 2A 2A 2A 2A	              BYTE "*****************************************************************"
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A

 0000080E 20 20 5F 5F 20		gameTank  BYTE "  __    "
	   20 20 20
 00000816  20 48 75 61 5C				  BYTE " Hua\==D"
	   3D 3D 44
 0000081E  28 54 61 6E 6B				  BYTE "(Tank)  "
	   29 20 20

 00000826 20 20 20 20 20		clearTank BYTE "        "
	   20 20 20
 0000082E  20 20 20 20 20				  BYTE "        "
	   20 20 20
 00000836  20 20 20 20 20				  BYTE "        "
	   20 20 20

 0000083E 28 5C 5F 2F 29		gameBogy  BYTE "(\_/)"
 00000843  7C 4F 76 4F 7C				  BYTE "|OvO|"
 00000848  7C 5F 7C 5F 7C				  BYTE "|_|_|"

 0000084D 20 20 20 20 20		clearBogy BYTE "     "
 00000852  20 20 20 20 20				  BYTE "     "
 00000857  20 20 20 20 20				  BYTE "     "

 0000085C 4E 4F 57 4F 52		bullet BYTE "NOWORK",0
	   4B 00
 00000863 20 20 20 20 20		clearBullet BYTE "      ",0
	   20 00

 0000086A 7C 00				line BYTE "|",0
 0000086C 000A				greenColor WORD 0Ah

 0000086E 000E				yellowColor WORD 0Eh

 00000870 4C 65 76 65 6C		level BYTE "Level: ",0
	   3A 20 00
 00000878 53 74 61 74 65		state BYTE "State: ",0
	   3A 20 00
 00000880 53 63 6F 72 65		score BYTE "Score: ",0
	   3A 20 00
 00000888 4C 69 76 65 73		lives BYTE "Lives: ",0
	   3A 20 00
 00000890 42 6F 67 69 65		bogys BYTE "Bogies:",0
	   73 3A 00

 00000898 0001				levelNum WORD 1
 0000089A  00000004 [			levelStr BYTE 4 DUP(?)
	    00
	   ]

 0000089E 50 61 75 73 65		paused BYTE "Paused ",0
	   64 20 00
 000008A6 50 6C 61 79 69		playing BYTE "Playing",0
	   6E 67 00

 000008AE 0000				scoreNum WORD 0
 000008B0  00000004 [			scoreStr BYTE 4 DUP(?)
	    00
	   ]

 000008B4 0064				livesNum WORD 100
 000008B6  00000004 [			livesStr BYTE 4 DUP(?)
	    00
	   ]
					
 000008BA 0005				bogysNum WORD 5
 000008BC  00000004 [			bogysStr BYTE 4 DUP(?)
	    00
	   ]

 000008C0  0000006E [			gameBgTB BYTE 110 DUP("*"),0
	    2A
	   ] 00
 0000092F 2A				gameBgM  BYTE "*", 108 DUP(" "), "*",0	  
	   0000006C [
	    20
	   ] 2A 00

 00000000			.code

 00000000			main PROC
					INVOKE GetstdHandle, STD_OUTPUT_HANDLE
 00000007  A3 0000001A R		mov consoleHandle, eax
					
					INVOKE SetConsoleTitle, ADDR windowTitleStr			; 設定視窗標題
					
					INVOKE SetConsoleWindowInfo,						; 設定視窗大小
				     	consoleHandle,
				     	TRUE,
				     	ADDR windowBound
					
					INVOKE printStartScene

 0000002D			Ex:	.IF eax == 4        ;直接離開
 00000032  E8 00000000 E			call Clrscr
 00000037  E9 000002B4				jmp ExitProgram
					.ENDIF

					;print test Bogy
 0000003C			GameLoop:
					Invoke tankWalking, xyPosTank
					.IF xyPosBogy0.x < 107
						INVOKE bogyWalking, xyPosBogy0
					.ENDIF
					.IF xyPosBogy1.x < 107
						INVOKE bogyWalking, xyPosBogy1
					.ENDIF
					.IF xyPosBogy2.x < 107
						INVOKE bogyWalking, xyPosBogy2
					.ENDIF
					.IF xyPosBogy3.x < 107
						INVOKE bogyWalking, xyPosBogy3
					.ENDIF
					.IF xyPosBogy4.x < 107
						INVOKE bogyWalking, xyPosBogy4
					.ENDIF
					.IF xyPosBogy5.x < 107
						INVOKE bogyWalking, xyPosBogy5
					.ENDIF

 000000C5  50				push eax
 000000C6  B8 000001F4			mov eax, 500
 000000CB  E8 00000000 E		call Delay
 000000D0  58				pop eax

					.IF xyPosBogy0.x < 107
						INVOKE bogyClear, xyPosBogy0
					.ENDIF
					.IF xyPosBogy1.x < 107
						INVOKE bogyClear, xyPosBogy1
					.ENDIF
					.IF xyPosBogy2.x < 107
						INVOKE bogyClear, xyPosBogy2
					.ENDIF
					.IF xyPosBogy3.x < 107
						INVOKE bogyClear, xyPosBogy3
					.ENDIF
					.IF xyPosBogy4.x < 107
						INVOKE bogyClear, xyPosBogy4
					.ENDIF
					.IF xyPosBogy5.x < 107
						INVOKE bogyClear, xyPosBogy5
					.ENDIF

					
					INVOKE printGreenLine, xyPos
 0000015A  66| 83 2D			sub xyPosBogy0.x, 10
	   00000026 R 0A
 00000162  66| 83 2D			sub xyPosBogy1.x, 2
	   0000002A R 02
 0000016A  66| 83 2D			sub xyPosBogy2.x, 3
	   0000002E R 03
 00000172  66| 83 2D			sub xyPosBogy3.x, 4
	   00000032 R 04
 0000017A  66| 83 2D			sub xyPosBogy4.x, 5
	   00000036 R 05
 00000182  66| 83 2D			sub xyPosBogy5.x, 6
	   0000003A R 06

					.IF xyPosBogy0.x < 16
 00000194  66| C7 05				mov xyPosBogy0.x, 107
	   00000026 R
	   006B
 0000019D  66| 83 2D				sub livesNum, 1
	   000008B4 R 01
						INVOKE printLives, xyPos
						.IF livesNum == 0
 000001BA  B8 00000004					mov eax, 4 ;之後要改3
 000001BF  E9 FFFFFE69					jmp Ex		
						.ENDIF
					.ENDIF
					.IF xyPosBogy1.x < 16
 000001CE  66| C7 05				mov xyPosBogy1.x, 107
	   0000002A R
	   006B
 000001D7  66| 83 2D				sub livesNum, 1
	   000008B4 R 01
						INVOKE printLives, xyPos
						.IF livesNum == 0
 000001F4  B8 00000004					mov eax, 4 ;之後要改3
 000001F9  E9 FFFFFE2F					jmp Ex		
						.ENDIF
					.ENDIF
					.IF xyPosBogy2.x < 16
 00000208  66| C7 05				mov xyPosBogy2.x, 107
	   0000002E R
	   006B
 00000211  66| 83 2D				sub livesNum, 1
	   000008B4 R 01
						INVOKE printLives, xyPos
						.IF livesNum == 0
 0000022E  B8 00000004					mov eax, 4 ;之後要改3
 00000233  E9 FFFFFDF5					jmp Ex		
						.ENDIF
					.ENDIF
					.IF xyPosBogy3.x < 16
 00000242  66| C7 05				mov xyPosBogy3.x, 107
	   00000032 R
	   006B
 0000024B  66| 83 2D				sub livesNum, 1
	   000008B4 R 01
						INVOKE printLives, xyPos
						.IF livesNum == 0
 00000268  B8 00000004					mov eax, 4 ;之後要改3
 0000026D  E9 FFFFFDBB					jmp Ex		
						.ENDIF
					.ENDIF
					.IF xyPosBogy4.x < 16
 0000027C  66| C7 05				mov xyPosBogy4.x, 107
	   00000036 R
	   006B
 00000285  66| 83 2D				sub livesNum, 1
	   000008B4 R 01
						INVOKE printLives, xyPos
						.IF livesNum == 0
 000002A2  B8 00000004					mov eax, 4 ;之後要改3
 000002A7  E9 FFFFFD81					jmp Ex		
						.ENDIF
					.ENDIF
					.IF xyPosBogy5.x < 16
 000002B6  66| C7 05				mov xyPosBogy5.x, 107
	   0000003A R
	   006B
 000002BF  66| 83 2D				sub livesNum, 1
	   000008B4 R 01
						INVOKE printLives, xyPos
						.IF livesNum == 0
 000002DC  B8 00000004					mov eax, 4 ;之後要改3
 000002E1  E9 FFFFFD47					jmp Ex		
						.ENDIF
					.ENDIF
					
 000002E6  E9 FFFFFD51			jmp GameLoop



 000002EB  E8 00000000 E		call WaitMsg

 000002F0			ExitProgram:
					exit
 000002F7			main ENDP

 000002F7			printStartScene PROC
					LOCAL cursorInfo:CONSOLE_CURSOR_INFO
 000002FD  C7 45 F8			mov cursorInfo.dwSize, 100
	   00000064
 00000304  C7 45 FC			mov cursorInfo.bVisible, 0
	   00000000
					INVOKE SetConsoleCursorInfo,
				    	consoleHandle,
				        ADDR cursorInfo

					; 清空畫面
 0000031A  E8 00000000 E		call Clrscr

 0000031F  B9 00000006			mov ecx, 6
 00000324  BE 00000000			mov esi, 0

				; 印開始畫面的標題
 00000329			ShowStartStr:
 00000329  51				push ecx
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR [startStr + esi],
						108,
						xyPos,
						ADDR cells_Written

 00000349  83 C6 6C			add esi, 108
 0000034C  66| FF 05			inc xyPos.y
	   00000020 R
 00000353  59				pop ecx
 00000354  E2 D3			loop ShowStartStr

				; 印開始畫面的選項
 00000356			PrintOption:
 00000356  66| 83 05		    add xyPos.y, 7
	   00000020 R 07
 0000035E  66| 83 05		    add xyPos.x, 48
	   0000001E R 30

				    INVOKE WriteConsoleOutputCharacter,
				        consoleHandle,
				        ADDR enterMsg,
				        SIZEOF enterMsg,
				        xyPos,
				        ADDR cells_Written

 00000383  66| 83 05		    add xyPos.y, 2
	   00000020 R 02

				    INVOKE WriteConsoleOutputCharacter,
				        consoleHandle,
				        ADDR LeaveMsg,
				        SIZEOF LeaveMsg,
				        xyPos,
				        ADDR cells_Written

 000003A8  B9 00000007			mov ecx, 7
 000003AD  BE 00000000			mov esi, 0
 000003B2  66| C7 05			mov xyPos.x, 20
	   0000001E R
	   0014
 000003BB  66| C7 05			mov xyPos.y, 15
	   00000020 R
	   000F

 000003C4			PrintStartTank:
 000003C4  51				push ecx
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR [startTank + esi],
						24,
						xyPos,
						ADDR cells_Written

 000003E4  83 C6 18			add esi, 24
 000003E7  66| FF 05			inc xyPos.y
	   00000020 R
 000003EE  59				pop ecx
 000003EF  E2 D3			loop PrintStartTank

 000003F1  B9 00000005			mov ecx, 5
 000003F6  BE 00000000			mov esi, 0
 000003FB  66| C7 05			mov xyPos.x, 85
	   0000001E R
	   0055
 00000404  66| C7 05			mov xyPos.y, 16
	   00000020 R
	   0010

 0000040D			PrintStartBogy:
 0000040D  51				push ecx
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR [startBogy + esi],
						7,
						xyPos,
						ADDR cells_Written

 0000042D  83 C6 07			add esi, 7
 00000430  66| FF 05			inc xyPos.y
	   00000020 R
 00000437  59				pop ecx
 00000438  E2 D3			loop PrintStartBogy

 0000043A			StartOrNot:
 0000043A  E8 00000000 E	    call ReadChar

					.IF ax == 1265h     ;press e to start game
 00000445  E8 00000000 E	        call Clrscr
 0000044A  66| C7 05				mov xyPos.x, 28
	   0000001E R
	   001C
 00000453  66| C7 05				mov xyPos.y, 7
	   00000020 R
	   0007

 0000045C  B9 00000011				mov ecx, 17
 00000461  BE 00000000				mov esi, 0
 00000466  EB 14				jmp PrintIntro
				    .ENDIF
				    .IF ax == 266ch     ;press l to leave
 0000046E  B8 00000004				mov eax, 4
 00000473  E8 00000000 E			call Clrscr
				        ret
				    .ENDIF
 0000047A  EB BE			jmp StartOrNot

 0000047C			PrintIntro:
 0000047C  51				push ecx
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR [gameIntro + esi],
						65,
						xyPos,
						ADDR cells_Written

 0000049C  83 C6 41			add esi, 65
 0000049F  66| FF 05			inc xyPos.y
	   00000020 R
 000004A6  59				pop ecx
 000004A7  E2 D3			loop PrintIntro

 000004A9			GameOrNot:
 000004A9  E8 00000000 E	    call ReadChar
					.IF ax == 3920h     ;press space to start game
 000004B4  E8 00000000 E	        call Clrscr
 000004B9  66| C7 05				mov xyPos.x, 5
	   0000001E R
	   0005
 000004C2  66| C7 05				mov xyPos.y, 4
	   00000020 R
	   0004
 000004CB  EB 02				jmp PrintGameSceneTop
					.ENDIF
 000004CD  EB DA			jmp GameOrNot

 000004CF			PrintGameSceneTop:
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR gameBgTB,
						110,
						xyPos,
						ADDR cells_Written
 000004EC  66| FF 05			inc xyPos.y
	   00000020 R

 000004F3  B9 00000018			mov ecx, 24
 000004F8			PrintGameScene:
 000004F8  51				push ecx
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR gameBgM,
						110,
						xyPos,
						ADDR cells_Written
 00000516  66| FF 05			inc xyPos.y
	   00000020 R
 0000051D  59				pop ecx
 0000051E  E2 D8			loop PrintGameScene

					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR gameBgTB,
						110,
						xyPos,
						ADDR cells_Written
 0000053D  66| FF 05			inc xyPos.y
	   00000020 R

					INVOKE printGreenLine, xyPos
					
 0000054F			PrintBar:
 0000054F  66| C7 05			mov xyPos.x, 5
	   0000001E R
	   0005
 00000558  66| C7 05			mov xyPos.y, 2
	   00000020 R
	   0002
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR level,
						SIZEOF level,
						xyPos,
						ADDR cells_Written

					INVOKE printLevel, xyPos

 00000589  66| C7 05			mov xyPos.x, 29
	   0000001E R
	   001D
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR state,
						SIZEOF state,
						xyPos,
						ADDR cells_Written
					
 000005AF  66| C7 05			mov xyPos.x, 56
	   0000001E R
	   0038
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR score,
						SIZEOF score,
						xyPos,
						ADDR cells_Written

					INVOKE printScore, xyPos

 000005E0  66| C7 05			mov xyPos.x, 80
	   0000001E R
	   0050
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR lives,
						SIZEOF lives,
						xyPos,
						ADDR cells_Written

					INVOKE printLives, xyPos

 00000611  66| C7 05			mov xyPos.x, 104
	   0000001E R
	   0068
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR bogys,
						SIZEOF bogys,
						xyPos,
						ADDR cells_Written

					INVOKE printBogys, xyPos

					ret
 00000644			printStartScene ENDP

 00000644			printLevel PROC,
					xyPosInit:COORD
 00000647  66| C7 45 08			mov xyPosInit.x, 12
	   000C
 0000064D  66| C7 45 0A			mov xyPosInit.y, 2
	   0002

 00000653  66| 8B 15			mov dx, levelNum
	   00000898 R
					INVOKE decStrLevel, dx

					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR levelStr,
						4,
						xyPosInit,
						ADDR cells_Written
					ret
 00000682			printLevel ENDP

 00000682			printScore PROC,
					xyPosInit:COORD
 00000685  66| C7 45 08			mov xyPosInit.x, 63
	   003F
 0000068B  66| C7 45 0A			mov xyPosInit.y, 2
	   0002

 00000691  66| 8B 15			mov dx, scoreNum
	   000008AE R
					INVOKE decStrScore, dx

					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR scoreStr,
						4,
						xyPosInit,
						ADDR cells_Written
					ret
 000006C0			printScore ENDP

 000006C0			printLives PROC,
					xyPosInit:COORD
 000006C3  66| C7 45 08			mov xyPosInit.x, 87
	   0057
 000006C9  66| C7 45 0A			mov xyPosInit.y, 2
	   0002

 000006CF  66| 8B 15			mov dx, livesNum
	   000008B4 R
					INVOKE decStrLives, dx

					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR livesStr,
						4,
						xyPosInit,
						ADDR cells_Written
					ret
 000006FE			printLives ENDP

 000006FE			printBogys PROC,
					xyPosInit:COORD
 00000701  66| C7 45 08			mov xyPosInit.x, 111
	   006F
 00000707  66| C7 45 0A			mov xyPosInit.y, 2
	   0002

 0000070D  66| 8B 15			mov dx, bogysNum
	   000008BA R
					INVOKE decStrBogys, dx

					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR bogysStr,
						4,
						xyPosInit,
						ADDR cells_Written
					ret
 0000073C			printBogys ENDP

 0000073C			bogyWalking PROC,
					xyPosInBogy:COORD
 0000073F  B9 00000003			mov ecx, 3
 00000744  BE 00000000			mov esi, 0

					;mov ebx, xyPosInBogy.y
 00000749			printBogy:
 00000749  51				push ecx
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR [gameBogy + esi],
						5,
						xyPosInBogy,
						ADDR cells_Written
 00000766  83 C6 05			add esi, 5
 00000769  66| FF 45 0A			inc xyPosInBogy.y
 0000076D  59				pop ecx
 0000076E  E2 D9			loop printBogy
					
					ret
 00000774			bogyWalking ENDP

 00000774			bogyClear PROC,
					xyPosInBogy:COORD
 00000777  B9 00000003			mov ecx, 3
 0000077C  BE 00000000			mov esi, 0
 00000781			removeBogy:
 00000781  51				push ecx
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR [clearBogy + esi],
						5,
						xyPosInBogy,
						ADDR cells_Written
 0000079E  83 C6 05			add esi, 5
 000007A1  66| FF 45 0A			inc xyPosInBogy.y
 000007A5  59				pop ecx
 000007A6  E2 D9			loop removeBogy
					ret
 000007AC			bogyClear ENDP

 000007AC			tankWalking PROC,
					xyPosInit:COORD
 000007AF  B9 00000003			mov ecx, 3
 000007B4  BE 00000000			mov esi, 0

					;mov ebx, xyPosInit.y
 000007B9			printTank:
 000007B9  51				push ecx
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR [gameTank + esi],
						8,
						xyPosInit,
						ADDR cells_Written
 000007D6  83 C6 08			add esi, 8
 000007D9  66| FF 45 0A			inc xyPosInit.y
 000007DD  59				pop ecx
 000007DE  E2 D9			loop printTank
					ret
 000007E4			tankWalking ENDP

 000007E4			tankClear PROC,
					xyPosInit:COORD
 000007E7  B9 00000003			mov ecx, 3
 000007EC  BE 00000000			mov esi, 0
 000007F1			removeTank:
 000007F1  51				push ecx
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR [clearTank + esi],
						8,
						xyPosInit,
						ADDR cells_Written
 0000080E  83 C6 08			add esi, 8
 00000811  66| FF 45 0A			inc xyPosInit.y
 00000815  59				pop ecx
 00000816  E2 D9			loop removeTank
					ret
 0000081C			tankClear ENDP

 0000081C			printGreenLine PROC,
					xyPosInLine:COORD
 0000081F  66| C7 45 08			mov xyPosInLine.x, 20
	   0014
 00000825  66| C7 45 0A			mov xyPosInLine.y, 5
	   0005

 0000082B  B9 00000018			mov ecx, 24
 00000830  BE 00000000			mov esi, 0
 00000835			PrintLine:
 00000835  51				push ecx
					INVOKE WriteConsoleOutputAttribute,
						consoleHandle,
						ADDR greenColor,
						1,
						xyPosInLine,
						ADDR cells_Written

					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR line,
						1,
						xyPosInLine,
						ADDR cells_Written
 0000086A  66| FF 45 0A			inc xyPosInLine.y
 0000086E  59				pop ecx
 0000086F  E2 C4			loop PrintLine
					ret
 00000875			printGreenLine ENDP

 00000875			decStrLevel PROC,
					levelNumDec:WORD
 00000878  B9 00000004			mov ecx, 4					;WORD型態最高4位數
 0000087D  B2 0A			mov dl, 10					;除數
 0000087F  66| 8B 45 08			mov ax, levelNumDec			;被除數
 00000883			change:
 00000883  51				push ecx
 00000884  F6 F2			div dl
 00000886  80 C4 30			add ah, '0'					;餘數轉成字存到levelNum_inLevel
 00000889  49				dec ecx
 0000088A  88 A1 0000089A R		mov [levelStr + ecx], ah
 00000890  66| 0F B6 C0			movzx ax, al				;商繼續除
 00000894  59				pop ecx
 00000895  E2 EC			loop change
					ret
 0000089B			decStrLevel ENDP

 0000089B			decStrScore PROC,
					scoreNumDec:WORD
 0000089E  B9 00000004			mov ecx, 4					;WORD型態最高4位數
 000008A3  B2 0A			mov dl, 10					;除數
 000008A5  66| 8B 45 08			mov ax, scoreNumDec			;被除數
 000008A9			change:
 000008A9  51				push ecx
 000008AA  F6 F2			div dl
 000008AC  80 C4 30			add ah, '0'					;餘數轉成字存到levelNum_inLevel
 000008AF  49				dec ecx
 000008B0  88 A1 000008B0 R		mov [scoreStr + ecx], ah
 000008B6  66| 0F B6 C0			movzx ax, al				;商繼續除
 000008BA  59				pop ecx
 000008BB  E2 EC			loop change
					ret
 000008C1			decStrScore ENDP

 000008C1			decStrLives PROC,
					livesNumDec:WORD
 000008C4  B9 00000004			mov ecx, 4					;WORD型態最高4位數
 000008C9  B2 0A			mov dl, 10					;除數
 000008CB  66| 8B 45 08			mov ax, livesNumDec			;被除數
 000008CF			change:
 000008CF  51				push ecx
 000008D0  F6 F2			div dl
 000008D2  80 C4 30			add ah, '0'					;餘數轉成字存到levelNum_inLevel
 000008D5  49				dec ecx
 000008D6  88 A1 000008B6 R		mov [livesStr + ecx], ah
 000008DC  66| 0F B6 C0			movzx ax, al				;商繼續除
 000008E0  59				pop ecx
 000008E1  E2 EC			loop change
					ret
 000008E7			decStrLives ENDP

 000008E7			decStrBogys PROC,
					bogysNumDec:WORD
 000008EA  B9 00000004			mov ecx, 4					;WORD型態最高4位數
 000008EF  B2 0A			mov dl, 10					;除數
 000008F1  66| 8B 45 08			mov ax, bogysNumDec			;被除數
 000008F5			change:
 000008F5  51				push ecx
 000008F6  F6 F2			div dl
 000008F8  80 C4 30			add ah, '0'					;餘數轉成字存到levelNum_inLevel
 000008FB  49				dec ecx
 000008FC  88 A1 000008BC R		mov [bogysStr + ecx], ah
 00000902  66| 0F B6 C0			movzx ax, al				;商繼續除
 00000906  59				pop ecx
 00000907  E2 EC			loop change
					ret
 0000090D			decStrBogys ENDP

				END main
Microsoft (R) Macro Assembler Version 14.33.31630.0	    12/18/22 03:44:36
main.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000099E Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000090D Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
bogyClear  . . . . . . . . . . .	P Near	 00000774 _TEXT	Length= 00000038 Public STDCALL
  xyPosInBogy  . . . . . . . . .	DWord	 bp + 00000008
  removeBogy . . . . . . . . . .	L Near	 00000781 _TEXT	
bogyWalking  . . . . . . . . . .	P Near	 0000073C _TEXT	Length= 00000038 Public STDCALL
  xyPosInBogy  . . . . . . . . .	DWord	 bp + 00000008
  printBogy  . . . . . . . . . .	L Near	 00000749 _TEXT	
decStrBogys  . . . . . . . . . .	P Near	 000008E7 _TEXT	Length= 00000026 Public STDCALL
  bogysNumDec  . . . . . . . . .	Word	 bp + 00000008
  change . . . . . . . . . . . .	L Near	 000008F5 _TEXT	
decStrLevel  . . . . . . . . . .	P Near	 00000875 _TEXT	Length= 00000026 Public STDCALL
  levelNumDec  . . . . . . . . .	Word	 bp + 00000008
  change . . . . . . . . . . . .	L Near	 00000883 _TEXT	
decStrLives  . . . . . . . . . .	P Near	 000008C1 _TEXT	Length= 00000026 Public STDCALL
  livesNumDec  . . . . . . . . .	Word	 bp + 00000008
  change . . . . . . . . . . . .	L Near	 000008CF _TEXT	
decStrScore  . . . . . . . . . .	P Near	 0000089B _TEXT	Length= 00000026 Public STDCALL
  scoreNumDec  . . . . . . . . .	Word	 bp + 00000008
  change . . . . . . . . . . . .	L Near	 000008A9 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000002F7 Public STDCALL
  Ex . . . . . . . . . . . . . .	L Near	 0000002D _TEXT	
  GameLoop . . . . . . . . . . .	L Near	 0000003C _TEXT	
  ExitProgram  . . . . . . . . .	L Near	 000002F0 _TEXT	
printBogys . . . . . . . . . . .	P Near	 000006FE _TEXT	Length= 0000003E Public STDCALL
  xyPosInit  . . . . . . . . . .	DWord	 bp + 00000008
printGreenLine . . . . . . . . .	P Near	 0000081C _TEXT	Length= 00000059 Public STDCALL
  xyPosInLine  . . . . . . . . .	DWord	 bp + 00000008
  PrintLine  . . . . . . . . . .	L Near	 00000835 _TEXT	
printLevel . . . . . . . . . . .	P Near	 00000644 _TEXT	Length= 0000003E Public STDCALL
  xyPosInit  . . . . . . . . . .	DWord	 bp + 00000008
printLives . . . . . . . . . . .	P Near	 000006C0 _TEXT	Length= 0000003E Public STDCALL
  xyPosInit  . . . . . . . . . .	DWord	 bp + 00000008
printScore . . . . . . . . . . .	P Near	 00000682 _TEXT	Length= 0000003E Public STDCALL
  xyPosInit  . . . . . . . . . .	DWord	 bp + 00000008
printStartScene  . . . . . . . .	P Near	 000002F7 _TEXT	Length= 0000034D Public STDCALL
  cursorInfo . . . . . . . . . .	QWord	 bp - 00000008
  ShowStartStr . . . . . . . . .	L Near	 00000329 _TEXT	
  PrintOption  . . . . . . . . .	L Near	 00000356 _TEXT	
  PrintStartTank . . . . . . . .	L Near	 000003C4 _TEXT	
  PrintStartBogy . . . . . . . .	L Near	 0000040D _TEXT	
  StartOrNot . . . . . . . . . .	L Near	 0000043A _TEXT	
  PrintIntro . . . . . . . . . .	L Near	 0000047C _TEXT	
  GameOrNot  . . . . . . . . . .	L Near	 000004A9 _TEXT	
  PrintGameSceneTop  . . . . . .	L Near	 000004CF _TEXT	
  PrintGameScene . . . . . . . .	L Near	 000004F8 _TEXT	
  PrintBar . . . . . . . . . . .	L Near	 0000054F _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
tankClear  . . . . . . . . . . .	P Near	 000007E4 _TEXT	Length= 00000038 Public STDCALL
  xyPosInit  . . . . . . . . . .	DWord	 bp + 00000008
  removeTank . . . . . . . . . .	L Near	 000007F1 _TEXT	
tankWalking  . . . . . . . . . .	P Near	 000007AC _TEXT	Length= 00000038 Public STDCALL
  xyPosInit  . . . . . . . . . .	DWord	 bp + 00000008
  printTank  . . . . . . . . . .	L Near	 000007B9 _TEXT	
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
bogysNum . . . . . . . . . . . .	Word	 000008BA _DATA	
bogysStr . . . . . . . . . . . .	Byte	 000008BC _DATA	
bogys  . . . . . . . . . . . . .	Byte	 00000890 _DATA	
brown  . . . . . . . . . . . . .	Number	 00000006h   
bullet . . . . . . . . . . . . .	Byte	 0000085C _DATA	
cells_Written  . . . . . . . . .	DWord	 0000003E _DATA	
clearBogy  . . . . . . . . . . .	Byte	 0000084D _DATA	
clearBullet  . . . . . . . . . .	Byte	 00000863 _DATA	
clearTank  . . . . . . . . . . .	Byte	 00000826 _DATA	
consoleHandle  . . . . . . . . .	DWord	 0000001A _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
enterMsg . . . . . . . . . . . .	Byte	 000002CA _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gameBgM  . . . . . . . . . . . .	Byte	 0000092F _DATA	
gameBgTB . . . . . . . . . . . .	Byte	 000008C0 _DATA	
gameBogy . . . . . . . . . . . .	Byte	 0000083E _DATA	
gameIntro  . . . . . . . . . . .	Byte	 000003BD _DATA	
gameTank . . . . . . . . . . . .	Byte	 0000080E _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
greenColor . . . . . . . . . . .	Word	 0000086C _DATA	
green  . . . . . . . . . . . . .	Number	 00000002h   
leaveMsg . . . . . . . . . . . .	Byte	 000002DE _DATA	
levelNum . . . . . . . . . . . .	Word	 00000898 _DATA	
levelStr . . . . . . . . . . . .	Byte	 0000089A _DATA	
level  . . . . . . . . . . . . .	Byte	 00000870 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
line . . . . . . . . . . . . . .	Byte	 0000086A _DATA	
livesNum . . . . . . . . . . . .	Word	 000008B4 _DATA	
livesStr . . . . . . . . . . . .	Byte	 000008B6 _DATA	
lives  . . . . . . . . . . . . .	Byte	 00000888 _DATA	
magenta  . . . . . . . . . . . .	Number	 00000005h   
paused . . . . . . . . . . . . .	Byte	 0000089E _DATA	
playing  . . . . . . . . . . . .	Byte	 000008A6 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
scoreNum . . . . . . . . . . . .	Word	 000008AE _DATA	
scoreStr . . . . . . . . . . . .	Byte	 000008B0 _DATA	
score  . . . . . . . . . . . . .	Byte	 00000880 _DATA	
startBogy  . . . . . . . . . . .	Byte	 0000039A _DATA	
startStr . . . . . . . . . . . .	Byte	 00000042 _DATA	
startTank  . . . . . . . . . . .	Byte	 000002F2 _DATA	
state  . . . . . . . . . . . . .	Byte	 00000878 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
windowBound  . . . . . . . . . .	SMALL_RECT  00000012 _DATA	
windowTitleStr . . . . . . . . .	Byte	 00000000 _DATA	
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
xyPosBogy0 . . . . . . . . . . .	COORD	 00000026 _DATA	
xyPosBogy1 . . . . . . . . . . .	COORD	 0000002A _DATA	
xyPosBogy2 . . . . . . . . . . .	COORD	 0000002E _DATA	
xyPosBogy3 . . . . . . . . . . .	COORD	 00000032 _DATA	
xyPosBogy4 . . . . . . . . . . .	COORD	 00000036 _DATA	
xyPosBogy5 . . . . . . . . . . .	COORD	 0000003A _DATA	
xyPosTank  . . . . . . . . . . .	COORD	 00000022 _DATA	
xyPos  . . . . . . . . . . . . .	COORD	 0000001E _DATA	
yellowColor  . . . . . . . . . .	Word	 0000086E _DATA	
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
